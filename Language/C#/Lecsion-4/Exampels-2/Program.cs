// Теперь давайте попробуем сделать примерно то же с числами. Определим двумерный массив, назовём
// его matrix и укажем для него, например, 3 строки и 4 столбца. Затем поступим аналогично, используя
// циклы. Вместо rows можно написать i (внешний цикл, щёлкающий строки), вместо columns — j
// (внутренний цикл, щёлкающий столбцы). Выводим на экран. Там, где в прошлом примере был дефис
// (минус), поставим пробел.

// int[,] matrix = new int[3, 4];
// for (int i = 0; i < 3; i++)
// {
//     for (int j = 0; j < 4; j++)
//     {
//         Console.WriteLine($" {matrix[i, j]} ");
//     }
// }

// Работать с двумерными массивами несложно, но есть проблема с выводом. Мы ожидали получить
// прямоугольную таблицу чисел, а получили вывод количества элементов. Дело в том, что после вывода
// очередного элемента мы переводим курсор в новую позицию. Давайте схитрим и, пока будем
// пробегаться по столбцам, будем выводить числа через пробел. А после того, как вывели все элементы
// столбцов в текущей строке, принудительно сделаем переход на новую строку. Так добьёмся красивого
// вывода матрицы чисел.

// int[,] matrix = new int[3, 4];
// for (int i = 0; i < 3; i++)
// {
//     for (int j = 0; j < 4; j++)
//     {
//         Console.Write($"{matrix[i, j]} ");
//     }
//     Console.WriteLine();
// }

// Важно, что 3 и 4(int[,] matrix = new int[3, 4]), которые определены для самого массива,
// можно оставить, потому что при инициализации массива вы всегда должны определить, сколько
// памяти нужно выделить. А вот в момент, когда вы будете работать, например, в циклах или методах,
// можно получить количество строк и другим способом. Для тройки указываем имя массива и новый
// функционал GetLength(0). 0 в качестве аргумента означает количество строк. Аналогично и для
// четвёрки: пишем имя массива, точку и GetLength(1).

int[,] matrix = new int[3, 4];
for (int i = 0; i < matrix.GetLength(0); i++)
{
    for (int j = 0; j < matrix.GetLength(1); j++)
    {
        Console.Write($"{matrix[i, j]} ");
    }
    Console.WriteLine();
}