# # В файле храняться числа, нужно выбрать четные и состовит список пар(числ, квадрат числа)
# # пример:
# # 1 2 3 5 8 15 23 38
# # Получить:
# # [(2,4)(8,54)(38,1444)]

# path = 'C:\Users\User\Desktop\урок 4'  # Написать путь к файлу'
# f = open(path, 'r') #Связываем нашу переменую(f) непосредствено с файлом на диске(open(path, 'r'))
# data = f.read() + ''  # Читаем (считываю все что еcть (f.read() и искуствено туда добовляю пробел (+ ' '))
# f.close # Закрываю файл

# numbers =[] # Создаю пустой список который будем наполнять в дальнейшем
# # 
# while data != '':                         # Пробегаюсь по всей строке и делаю проверку пока моястрока не пустая (data != '')
#     space_pos = data.index(' ')           # Дальше наша задача найти первуую позицию пробела (data.index(' ')) 
#     numbers.append(int(data[:space_pos])) # Взять все что находится от первого символа до позиции первого пробела
#                                           # (data[:space_pos]) превратить это в число (int(data[:space_pos])) и добавить список
#                                           #  чисел (number.append) 
#     data = data[space_pos+1:]             # Обновить нашу строку (data) с учетом того что мы добавили в нашу выборку то что мы
#                                           # обработали не нужно здесь использовать
# out = []                                  # Создаем новый список
# for e in numbers:                         # Пробежавшись поисходому (for e in numbers) проверко того что:
#     if not e % 2:                         # Число дествительно являеться четным(e % 2)
#         out.append((e,e **2))             # Добавили новый список кортежи где в качестве первой координаты (e), а в качестве
#                                           # второй координаты квадрат этого числа (e**2)
# print(out) # 


#                                   УЛУЧШЕНИЯ КОДА
def selekt(f, col):                         # Опишем некотурую функцию (selekt) которая будет принемать какуюто функцию (f), и
                                            # набор данных (col)
    return [f(x) for x in col]              # Формируем новый список и сразу его возврощять в качестве логики мы опишем
                                            # (f(x) for x in col)

def where(f, col):                          # Также опишем функцию (where) которая в качесте аргумента принемает функцию и
                                            # набор данных (f, col)
    return [x for x in col if f(x)]         # Возврощять она будит некий список ([x for x in col if f(x)])

# split - разбивает строку на части, используя специальный разделитель, и возвращает эти части в виде списка.

data = '1 2 3 5 8 15 23 36'.split           # Сделали готовую строку что бы не считывать данные из файла и применяем функцию
                                            # (split). Есть у нас строча '1 2 3 5 8 23 38'.split и мы на выходе(data) получим
                                            # набор строк 

res = selekt(int, data)                     # Сохроняем результат в некий список list. Результа работы нашей функции (f), где в
                                            # качестве первого аргумента будет передоваться функция которая отвечает за
                                            # преоброзования строк в число в наше случае это функция int, а в качестве набора
                                            #  даных будет выступать (data) 
res = where(lambda x: not x%2, res)         # В (res) положем результат работы функции (where) где в качестве аргумента
                                            # пробрасываем фунцию делающию проверку что число четное (lambda x: not x%2) и в
                                            # качестве второго аргумента мы передаем результат работы в строке (на предедушем
                                            # этапе)
res = selekt(lambda x:(x, x**2),res)  
print(res)                                  # Распечатывает и на выходе у нас получаеться список чисел