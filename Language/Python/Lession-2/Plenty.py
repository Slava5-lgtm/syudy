                                                # МНОЖЕСТВО
                                            # Неупорядоченная совокупность элементов

colors = {'red', 'green', 'blue'}
# print(type(colors))                         # Тип данных у множителей это (set)

print(colors)  # {'red', 'green', 'blue'}
colors.add('red')                           # В множество можно и добовлять елементы ну таак как у нас (red) у нас уже есть
                                            
print(colors)                               # добовления не будет
colors.add('gray')                          # но если мы добавим новый элемент    
print(colors)                               # он появиться
colors.remove('red')                        # Если нужно удолить какойто элемент пользуемся remove и в скобках тот элемент
                                            # которы нужно удолить (red)
# print(colors)  # {'green', 'blue','gray'}
# colors.remove('red')                        # если удолить элемент которого там не существует то будет ошибка
                                            # KeyError: 'red'

colors.discard('red')                       # Если нужно удолить элемент лучше пользоватьсяэтой командой (discard) если
                                            # элемента нет ошибки не будет как при команде (remove)
print(colors)                                
colors.clear()                              # используя функцию cler() можно очистить множество и дальше работать уже с
                                            # пустым множеством
print(colors)  # set()


a = {1, 2, 3, 5, 8}                         # Унас имееться одно множество
b = {'2', '5', 8, 13, 21}                   # Затем мы определяем второе множество
c = a.copy()                                # И захотели создать множество на основе имеюшегося то при помощи этой команды
                                            # (copy()) мы # можем это сделать
u =a.union(b)                               # обеденения множества указываем первое (а) Вызываем функцию (union) и в качестве
                                            # аргумента передаем второе множество (b)
i = a. intersection(b)                      # пересечение
dl = a.difference(b)                        # разница

s = frozenset(a)                            # замороженный множество не какой метод работать не будет
